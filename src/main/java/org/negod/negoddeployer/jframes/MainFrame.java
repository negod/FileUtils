/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.negod.negoddeployer.jframes;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.negod.negoddeployer.constants.SettingsType;
import org.negod.negoddeployer.constants.XmlSettings;
import org.negod.negoddeployer.controller.Application;
import org.negod.negoddeployer.entity.Settings;
import org.negod.negoddeployer.enums.EventTypes;
import org.negod.negoddeployer.interfaces.EventObserver;
import org.negod.negoddeployer.interfaces.NegodJFrame;
import org.negod.negoddeployer.interfaces.JFrameImpl;

/**
 *
 * @author jojoha
 */
public class MainFrame extends JFrameImpl implements NegodJFrame, EventObserver {

    Settings settings;

    /**
     * Creates new form MainFrame
     */
    public MainFrame(Object data) {
        super(data);

    }

    public void setSettings() {
        settings = Application.getXmlFileHandler().getSettings();
        deployPath.setText(settings.getDeployPath());
        zipPath.setText(settings.getZipPath());
        unZipCheckBox.setSelected(settings.isUnzip());
        compileCheckBox.setSelected(settings.isCompile());
        compilePath.setText(settings.getCompilePath());
    }

    public void updateSettings() {
        settings = Application.getXmlFileHandler().getSettings();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        cmdOutputPanel1 = new org.negod.negoddeployer.panels.CmdOutputPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        executeButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        zipPath = new javax.swing.JTextField();
        setZipPathButton = new javax.swing.JButton();
        setDeploypathButton = new javax.swing.JButton();
        unZipCheckBox = new javax.swing.JCheckBox();
        deployPath = new javax.swing.JTextField();
        compilePathButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        compilePath = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        compileCheckBox = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        clearOutPut = new javax.swing.JCheckBox();
        taskProgressBar1 = new org.negod.negoddeployer.jframes.TaskProgressBar();
        output = new org.negod.negoddeployer.panels.CmdOutputPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("COPY THA FILES!");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        executeButton.setText("Say hello to my little friend!");
        executeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                executeButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("Path for deploy");

        zipPath.setToolTipText("Choose the path of the Zip to be deployed");

        setZipPathButton.setText("...");
        setZipPathButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setZipPathButtonActionPerformed(evt);
            }
        });

        setDeploypathButton.setText("...");
        setDeploypathButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setDeploypathButtonActionPerformed(evt);
            }
        });

        unZipCheckBox.setBackground(new java.awt.Color(255, 255, 255));
        unZipCheckBox.setText("UnZip file");
        unZipCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unZipCheckBoxActionPerformed(evt);
            }
        });

        deployPath.setToolTipText("Choose the path to the glassfish domain");

        compilePathButton.setText("...");
        compilePathButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compilePathButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Path to Zip-file");

        compilePath.setToolTipText("Project path (For compiling)");

        jLabel1.setFont(new java.awt.Font("Viner Hand ITC", 0, 18)); // NOI18N
        jLabel1.setText("SUPA DUPA INSPECTION DEPLOY TOOL");

        jButton4.setText("Hasta la vista!");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        compileCheckBox.setBackground(new java.awt.Color(255, 255, 255));
        compileCheckBox.setText("Compile project");
        compileCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compileCheckBoxActionPerformed(evt);
            }
        });

        jLabel2.setText("Compile Path");

        clearOutPut.setBackground(new java.awt.Color(255, 255, 255));
        clearOutPut.setText("Clear output when saying hello");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(715, 715, 715))
                            .addComponent(compilePath, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(deployPath, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(zipPath, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(unZipCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(compileCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(clearOutPut, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(taskProgressBar1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(executeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(compilePathButton, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(setDeploypathButton, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(setZipPathButton, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(zipPath, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(setZipPathButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addGap(8, 8, 8)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deployPath, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(setDeploypathButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(compilePath, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(compilePathButton))
                .addGap(43, 43, 43)
                .addComponent(jLabel1)
                .addGap(1, 1, 1)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(executeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(unZipCheckBox)
                    .addComponent(compileCheckBox)
                    .addComponent(clearOutPut))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addComponent(taskProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(output, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(output, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1033, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void setZipPathButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setZipPathButtonActionPerformed
        String path = Application.getXmlFileHandler().modifySetting(getFile(), SettingsType.ZIP_URL);
        zipPath.setText(path);
        updateSettings();
    }//GEN-LAST:event_setZipPathButtonActionPerformed

    private void setDeploypathButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setDeploypathButtonActionPerformed
        String path = Application.getXmlFileHandler().modifySetting(getPath(), SettingsType.DEPLOY_URL);
        deployPath.setText(path);
        updateSettings();
    }//GEN-LAST:event_setDeploypathButtonActionPerformed

    private ProcessBuilder getCommandToExecute() {
        ProcessBuilder builder = new ProcessBuilder("cmd.exe", "/c", "grunt");
        builder.directory(new File(settings.getCompilePath()));
        return builder;
    }

    public void doStuff() {

        Application.getEvents().notifyObservers(EventTypes.CHANGE_PROGRESS_TEXT, "Initializing");
        Application.getEvents().notifyObservers(EventTypes.CHANGE_PROGRESS_BAR, 0);

        if (clearOutPut.isSelected()) {
            output.clearText();
        }

        if (compileCheckBox.isSelected()) {
            Application.getCmdExecuter().ExecuteCommand(getCommandToExecute());
        }

        if (unZipCheckBox.isSelected() && !compileCheckBox.isSelected()) {
            Application.getFileUnzipper().UnZipFile(settings);
        }
    }

    private void executeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_executeButtonActionPerformed
        doStuff();
    }//GEN-LAST:event_executeButtonActionPerformed

    private void unZipCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unZipCheckBoxActionPerformed
        if (unZipCheckBox.isSelected()) {
            Application.getXmlFileHandler().modifySetting(XmlSettings.YES, SettingsType.UNZIP);
        } else {
            Application.getXmlFileHandler().modifySetting(XmlSettings.NO, SettingsType.UNZIP);
        }
        updateSettings();
    }//GEN-LAST:event_unZipCheckBoxActionPerformed

    private void compilePathButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compilePathButtonActionPerformed
        String path = Application.getXmlFileHandler().modifySetting(getPath(), SettingsType.COMPILE_URL);
        compilePath.setText(path);
        updateSettings();
        if (compileCheckBox.isSelected()) {
            Application.getCmdExecuter().ExecuteCommand(getCommandToExecute());
        }
    }//GEN-LAST:event_compilePathButtonActionPerformed

    private void compileCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compileCheckBoxActionPerformed
        if (compileCheckBox.isSelected()) {
            Application.getXmlFileHandler().modifySetting(XmlSettings.YES, SettingsType.COMPILE);
        } else {
            Application.getXmlFileHandler().modifySetting(XmlSettings.NO, SettingsType.COMPILE);
        }
    }//GEN-LAST:event_compileCheckBoxActionPerformed

    private String getPath() {
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser.setCurrentDirectory(new File("c://"));
        chooser.showOpenDialog(this);

        File f = chooser.getSelectedFile();
        if (f.isDirectory()) {
            return chooser.getSelectedFile().getAbsolutePath();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Yo, this is not a directory!");
            return settings.getZipPath();
        }
    }

    private String getFile() {
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        chooser.setCurrentDirectory(new File("c://"));
        chooser.showOpenDialog(this);

        File f = chooser.getSelectedFile();
        if (f.isFile()) {
            return chooser.getSelectedFile().getAbsolutePath();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Yo, this is not a file!");
            return settings.getZipPath();
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox clearOutPut;
    private org.negod.negoddeployer.panels.CmdOutputPanel cmdOutputPanel1;
    private javax.swing.JCheckBox compileCheckBox;
    private javax.swing.JTextField compilePath;
    private javax.swing.JButton compilePathButton;
    private javax.swing.JTextField deployPath;
    private javax.swing.JButton executeButton;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private org.negod.negoddeployer.panels.CmdOutputPanel output;
    private javax.swing.JButton setDeploypathButton;
    private javax.swing.JButton setZipPathButton;
    private org.negod.negoddeployer.jframes.TaskProgressBar taskProgressBar1;
    private javax.swing.JCheckBox unZipCheckBox;
    private javax.swing.JTextField zipPath;
    // End of variables declaration//GEN-END:variables

    @Override
    public void init() {
        initComponents();
        setSettings();
        output.registerAsObserver();
        taskProgressBar1.registerAsObserver();
    }

    @Override
    public void update(EventTypes eventType, Object data) {
        switch (eventType) {
            case CMD_COMMAND_EXECUTED_SUCCESS:
                if (settings.isUnzip()) {
                    Application.getFileUnzipper().UnZipFile(settings);
                }
            case FILE_UNZIPPED_SUCCESS:
                Application.getEvents().notifyObservers(EventTypes.CHANGE_PROGRESS_TEXT, "All tasks Success!");
        }
    }

    @Override
    public void registerAsObserver() {
        Application.getEvents().addObserver(this);
    }
}
